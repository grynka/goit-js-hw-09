{"mappings":"iiBAAA,IAKIA,EALJC,EAAAC,EAAA,SACMC,EAAQC,SAASC,cAAc,kBAC/BC,EAAOF,SAASC,cAAc,iBAC9BE,EAASH,SAASC,cAAc,mBACzBD,SAASC,cAAc,SAG/BG,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBACNV,EAAIO,EAAOI,MACIC,aAAY,WAU7B,IAAuBC,EAAUC,EATzBd,EAAI,IACNA,GAAK,EACLe,QAAQC,IAAIhB,EAAI,GAOCa,EANHb,EAAI,EAMSc,EANNX,EAAMQ,MAOxB,IAAIM,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQM,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,QAE5EK,EAAKK,EAAAvB,GAASwB,OAAOG,QAAQ,sBAAqCD,OAAfd,EAAS,QAAYc,OAANb,EAAM,UAE3EA,SAZAR,EAAKK,U","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst first = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst send = document.querySelector('.form');\nlet i;\n\nsend.addEventListener('submit', function (event) {\n  event.preventDefault()\n  i = amount.value\n const timerId = setInterval(() => {\n    if (i > 0) {\n      i -= 1\n      console.log(i + 1);\n      createPromise(i + 1, first.value);\n    }\n    return\n    }, step.value);\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      } else {\n        reject(Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$i","$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$first","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","event","preventDefault","value","setInterval","position","delay","console","log","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","concat","failure"],"version":3,"file":"03-promises.751d38a0.js.map"}