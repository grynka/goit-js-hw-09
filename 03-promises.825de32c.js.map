{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAQC,SAASC,cAAc,kBAC/BC,EAAOF,SAASC,cAAc,iBAC9BE,EAASH,SAASC,cAAc,mBAatC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQM,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,QAE5EG,EAAKK,EAAAjB,GAASkB,OAAOG,QAAQ,sBAAqCD,OAAfZ,EAAS,QAAYY,OAANX,EAAM,UAE3EA,MArBMN,SAASC,cAAc,SAG/BkB,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBACP,IAAK,IAAIC,EAAI,EAAGA,EAAInB,EAAOoB,MAAOD,IAAK,CAElClB,EAAckB,EAAI,EADLE,OAAOC,SAAS1B,EAAMwB,OAASD,EAAIE,OAAOC,SAASvB,EAAKqB,Y","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst first = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst send = document.querySelector('.form');\n\n\nsend.addEventListener('submit', function (event) {\n  event.preventDefault()\n for (let i = 0; i < amount.value; i++) {\n      let delays = Number.parseInt(first.value) + i * Number.parseInt(step.value)\n      createPromise(i + 1, delays);\n    }\n\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      } else {\n        reject(Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n    \n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$first","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","concat","failure","addEventListener","event","preventDefault","i","value","Number","parseInt"],"version":3,"file":"03-promises.825de32c.js.map"}