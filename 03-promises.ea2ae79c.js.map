{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAQC,SAASC,cAAc,kBAC/BC,EAAOF,SAASC,cAAc,iBAC9BE,EAASH,SAASC,cAAc,mBAatC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQM,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAqBX,QAAiBC,QAEpEG,EAAKK,EAAAjB,GAASkB,OAAOE,QAAQ,sBAAoBZ,QAAeC,UAEnEA,MArBMN,SAASC,cAAc,SAG/BiB,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBACP,IAAK,IAAIC,EAAI,EAAGA,EAAIlB,EAAOmB,MAAOD,IAAK,CAElCjB,EAAciB,EAAI,EADLE,OAAOC,SAASzB,EAAMuB,OAASD,EAAIE,OAAOC,SAAStB,EAAKoB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst first = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst send = document.querySelector('.form');\n\n\nsend.addEventListener('submit', function (event) {\n  event.preventDefault()\n for (let i = 0; i < amount.value; i++) {\n      let delays = Number.parseInt(first.value) + i * Number.parseInt(step.value)\n      createPromise(i + 1, delays);\n    }\n\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      } else {\n        reject(Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n    \n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$first","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure","addEventListener","event","preventDefault","i","value","Number","parseInt"],"version":3,"file":"03-promises.ea2ae79c.js.map"}